<Page x:Class="AtmUi.Pages.SampleExplorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:data="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
    xmlns:local="clr-namespace:AtmUi"
    xmlns:pages="clr-namespace:AtmUi.Pages"
    xmlns:templates="clr-namespace:AtmCommon.Templates"
    xmlns:viewmodels="clr-namespace:AtmUi.ViewModels"
    xmlns:controls="clr-namespace:AtmCommon.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    mc:Ignorable="d" 
    d:DesignHeight="1000" d:DesignWidth="1080"
    Title="Sample Explorer"
    >
    <Page.CommandBindings>
        <CommandBinding Command="{x:Static pages:SampleExplorer.OkButton_Command}" Executed="OkButton_Executed" CanExecute="OkButton_CanExecute"/>
        <CommandBinding Command="{x:Static pages:SampleExplorer.CancelButton_Command}" Executed="CancelButton_Executed" CanExecute="CancelButton_CanExecute"/>
    </Page.CommandBindings>
    <Grid>
        <Grid>
            <templates:OptionScreen>
                <!-- 
                This is an example of how to add new controls to the template content. Each template will have a 
                section like this were additional controls can be added that won't conflict with the existing controls. 
                -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Margin="20,0,20,40">
                        <TextBlock Text="{Binding TextContent}" HorizontalAlignment="Center" FontSize="20" TextWrapping="WrapWithOverflow" />
                    </Grid>

                    <Grid Grid.Row="1">
                        <!--
                        This button will automatically take on the same style as the buttons in the template. We can 
                        position it anywhere within the region that the template reserves for additional controls. 
                        The button is bound to a simple click handler rather than a command.
                        -->
                    </Grid>
                </Grid>
            </templates:OptionScreen>
        </Grid>
        <Grid Width="800" Height="500">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="7*"/>
            </Grid.ColumnDefinitions>
            <controls:Dialog_OkCancel x:Name="Dialog" Visibility="Hidden" Grid.ColumnSpan="2"/>
        </Grid>
    </Grid>
    <Page.DataContext>
        <viewmodels:SampleExplorer
            PageTitle="{x:Static pages:SampleExplorer.LinkName}" 
            Description="This page links to a few samples pages I've created."
            
            Button1_Content="{x:Static pages:MinimalPage.LinkName}"
            Button1_Link="{x:Static pages:MinimalPage.Path}"
            Button1_IsEnabled="{x:Static pages:MinimalPage.IsNavigationEnabled}"
            
            Button2_Content="{x:Static pages:SampleWeb.LinkName}"
            Button2_Link="{x:Static pages:SampleWeb.Path}"
            Button2_IsEnabled="{x:Static pages:SampleWeb.IsNavigationEnabled}"
            
            Button3_IsEnabled="False"
            
            DialogText="A simple, do-nothing dialog."
            Dialog_OkButton_Content="OK"
            Dialog_OkButton_Command="{x:Static pages:SampleExplorer.OkButton_Command}"
            Dialog_CancelButton_Content="Cancel"
            Dialog_CancelButton_Command="{x:Static pages:SampleExplorer.CancelButton_Command}"

            SystemButton_Link="{StaticResource SystemButtonLink}"
            />
    </Page.DataContext>

</Page>
